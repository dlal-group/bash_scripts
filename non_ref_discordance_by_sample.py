import sys
import gzip
import re
import os
import pdb

#define a function to calculate the overall concordance and NRD
def g_concordance(table):
	overall_conc_den=sum([table['SRR_ORR'],table['SRR_ORA'],table['SRR_OAA'],table['SRA_ORR'],table['SRA_ORA'],table['SRA_OAA'],table['SAA_ORR'],table['SAA_ORA'],table['SAA_OAA']])
	overall_conc_num= sum([table['SRR_ORR'],table['SRA_ORA'],table['SAA_OAA']])
	if overall_conc_den != 0:
		overall_concordance=float(overall_conc_num)/float(overall_conc_den)
	else:
		overall_concordance='NA'
	
	return overall_concordance

def nr_discordance(table):
	non_ref_den=sum([table['SRR_ORA'],table['SRR_OAA'],table['SRA_ORR'],table['SRA_ORA'],table['SRA_OAA'],table['SAA_ORR'],table['SAA_ORA'],table['SAA_OAA']])
	non_ref_num=sum([table['SRA_ORR'],table['SRA_OAA'],table['SAA_ORR'],table['SAA_ORA'],table['SRR_ORA'],table['SRR_OAA']])
	#if the site is monomorphic for the ref allele,we cant calculate the NRD, so set the value at NA
	if non_ref_den!= 0:
		non_ref_disc=float(non_ref_num)/float(non_ref_den)
	else:
		non_ref_disc='NA'
	return non_ref_disc

def print_table(table,dest):
	print >> dest, ' \t|RR\t|RA\t|AA\t|NA'
	print >> dest, '---\t---\t---\t---\t---\t'
	print >> dest, 'RR\t|%s\t|%s\t|%s\t|%s' %(table['SRR_ORR'],table['SRR_ORA'],table['SRR_OAA'],table['SRR_ONA'])
	print >> dest, '---\t---\t---\t---\t---\t'
	print >> dest, 'RA\t|%s\t|%s\t|%s\t|%s' %(table['SRA_ORR'],table['SRA_ORA'],table['SRA_OAA'],table['SRA_ONA'])
	print >> dest, '---\t---\t---\t---\t---\t'
	print >> dest, 'AA\t|%s\t|%s\t|%s\t|%s' %(table['SAA_ORR'],table['SAA_ORA'],table['SAA_OAA'],table['SAA_ONA'])
	print >> dest, '---\t---\t---\t---\t---\t'
	print >> dest, 'NA\t|%s\t|%s\t|%s\t|%s' %(table['SNA_ORR'],table['SNA_ORA'],table['SNA_OAA'],table['SNA_ONA'])
	print >> dest, '---\t---\t---\t---\t---\t'
	return


#Here we work o samples files generated by non_ref_discordance.py
#We read the files by chr and for each individual we create the concordance table and calculate the values for the GC and NRD
#SAMPLE_inputfile_name='QC_OUT/all_samples_all_chr_concordance_discordance_table.txt'
SAMPLE_inputfile_name=sys.argv[1]
indiv_inputfile_name=sys.argv[2]

#open sample file
SAMPLE_inputfile=open(SAMPLE_inputfile_name, 'r')
#open the file with indiv list
indiv_inputfile=open(indiv_inputfile_name, 'r')

#extract the indiv list
global indiv_list
indiv_list={}
pos=0
for indiv_line in indiv_inputfile:
	x=indiv_line.split()
	indiv_list[x[0]]=pos
	pos+=1
#set classes to calculate discordance
#classes=['SRR_ORR','SRR_ORA','SRR_OAA','SRR_ONA','SRA_ORR','SRA_ORA','SRA_OAA','SRA_ONA','SAA_ORR','SAA_ORA','SAA_OAA','SAA_ONA','SNA_ORR','SNA_ORA','SNA_OAA','SNA_ONA']

###WORK BY SAMPLE!!!######
global all_sample_count
all_sample_count={}
sample_lines=SAMPLE_inputfile.readlines()
header_line=sample_lines[0].strip().split('\t')
classes=header_line[4:len(header_line)]
all_samples_table=open('all_sample_concordance_discordance.txt', 'w')
print >> all_samples_table, 'SAMPLE_ID\tOGC\tNRD'
table_file=open('all_sample_concordance_discordance_table.txt', 'w')

for sample in indiv_list.keys():
	global sample_count
	sample_count={}
	#initialize the cohord dictionary.We need to do it for each snp
	for cohord in classes: #63799
		sample_count[cohord]=0

	current_sample_count=[]
	for sample_line in sample_lines:
		#print (seq_conversion)
		line=sample_line.strip().split('\t')
		if line[1]==sample:
			current_line = line[4:len(line)]
			for cohord in classes: #63799
				value = int(current_line[classes.index(cohord)])
				sample_count[cohord]+=value
	all_sample_count[sample]=sample_count
	
	#now calculate the formula for:
	#1)Overall genotype concordance
	sample_overall_concordance= g_concordance(all_sample_count[sample])
	#2)Non reference discordance rate
	sample_nonref_disc= nr_discordance(all_sample_count[sample])
	print >> all_samples_table, '%s\t%s\t%s' %(sample,sample_overall_concordance,sample_nonref_disc)

	#now print everything in a fancy way!
	print >> table_file,'\n\tWGS seq vs GWAS (sample: %s)\n' %(sample)
	print_table(all_sample_count[sample],table_file)
	print >> table_file,'Overall concordance: %s' %(sample_overall_concordance)
	print >> table_file,'Non ref-discordance: %s' %(sample_nonref_disc)

