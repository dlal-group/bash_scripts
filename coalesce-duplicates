#!/usr/bin/env perl
#
# Author: petr.danecek@sanger
#

use strict;
use warnings;
use Carp;

my $opts = parse_params();
coalesce($opts);

exit;

#--------------------------------

sub error
{
    my (@msg) = @_;
    if ( scalar @msg ) { confess @msg; }
    print 
        "Usage: script [OPTIONS]\n",
        "Options:\n",
    #    "   -t, --table <string>            Table name.\n",
        "   -h, -?, --help                  This help message.\n",
        "\n";
    exit -1;
}


sub parse_params
{
    my $opts = {};
    while (defined(my $arg=shift(@ARGV)))
    {
        if ( $arg eq '-t' || $arg eq '--table' ) { $$opts{table}=shift(@ARGV); next }
        if ( $arg eq '-?' || $arg eq '-h' || $arg eq '--help' ) { error(); }
        error("Unknown parameter \"$arg\". Run -h for help.\n");
    }
   # if ( !exists($$opts{table}) ) { error("Missing the -t option.\n") }
    return $opts;
}

sub coalesce
{
    my ($opts) = @_;
    my $prev;
    while (my $line=<STDIN>)
    {
        my @items = split(/\t/,$line);
        if ( ! defined $prev )
        {
            $prev = \@items;
            next;
        }

        my $same = 1;
        for my $i (0,1,3,4)
        {
            if ( $$prev[$i] ne $items[$i] ) { $same=0; last; }
        }
        if ( $same )
        {
            $$prev[2] .= ",$items[2]";
            next;
        }
        print join("\t",@$prev);
        $prev = \@items;
    }
    print join("\t",@$prev);
}

